version: '3.8'

services:
  frontend:
    container_name: restaurant-client
    build: ./frontend
    ports:
      - "3000:3000"  # Expose port 3000 to the host machine
    networks:
      - restaurant-network

  backend:
    container_name: restaurant-api
    build: ./backend
    ports:
      - "5001:5000"  # Expose container port 5000 on host port 5001 to avoid conflicts
    networks:
      - restaurant-network
    environment:
      - FLASK_ENV="development"
      - DATABASE_URL=postgresql://postgres:password@db:5432/restaurant

  db:
    container_name: restaurant-db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: restaurant
    volumes:
      - ${PWD}/db/init.sql:/docker-entrypoint-initdb.d/init.sql # https://hub.docker.com/_/postgres#:~:text=and%20POSTGRES_DB.-,Initialization%20scripts,-If%20you%20would
      - db_data:/var/lib/postgresql/data
    networks:
      - restaurant-network
    ports:
      - "5432:5432"  # Expose PostgreSQL port to the host machine

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Expose port 80 to the host machine for NGINX
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - restaurant-network

networks:
  restaurant-network:
    name: restaurant-network
    driver: bridge

volumes:
  db_data:
    driver: local
